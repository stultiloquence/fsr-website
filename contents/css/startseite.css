/* LAYOUT */

#siteContainer {
    max-width: 90rem;
}

main,
#schnellzugriff,
#kontakt {
    margin-top: calc(1.5 * var(--base-unit));
    margin-left: var(--base-unit);
    margin-right: var(--base-unit);
    margin-bottom: calc(3 * var(--base-unit));
}

/* One column layout. */
@media (max-width: 39.999rem) {
    #siteContainer {
        display: grid;
        grid-template-columns: minmax(0, 1fr);
    }

    /* Everything fills one line. */
    #mainHeader     { grid-row: 1 / 2; grid-column: 1 / 2; }
    #navigation     { grid-row: 2 / 3; grid-column: 1 / 2; }
    main            { grid-row: 3 / 4; grid-column: 1 / 2; }
    #schnellzugriff { grid-row: 4 / 5; grid-column: 1 / 2; }
    #kontakt        { grid-row: 5 / 6; grid-column: 1 / 2; }

    main,
    #schnellzugriff {
        margin-bottom: 0;
    }
}

/* Two column layout. */
@media (min-width: 40rem) and (max-width: 59.999rem) {
    #siteContainer {
        display: grid;
        grid-template-columns: minmax(min-content, 15rem) minmax(0, 1fr);
        grid-template-rows: auto auto min-content minmax(0, 1fr);
    }

    /* #aktuelles and #termine are left, #schnellzugriff and #kontakt are on the right. */
    #mainHeader     { grid-row: 1 / 2; grid-column: 1 / 3; }
    #navigation     { grid-row: 2 / 3; grid-column: 1 / 3; }
    #schnellzugriff { grid-row: 3 / 4; grid-column: 1 / 2; }
    #kontakt        { grid-row: 4 / 5; grid-column: 1 / 2; }
    main            { grid-row: 3 / 5; grid-column: 2 / 3; }

    #schnellzugriff {
        margin-bottom: 0;
    }
}

/* Three column layout. */
@media (min-width: 60rem) {
    #siteContainer {
        display: grid;
        grid-template-columns: minmax(min-content, 15rem) minmax(0, 1fr) 15rem;
    }

    /* #kontakt is left, main is in the middle, #schnellzugriff on the right. */
    #mainHeader     { grid-row: 1 / 2; grid-column: 1 / 4; }
    #navigation     { grid-row: 2 / 3; grid-column: 1 / 4; }
    #kontakt        { grid-row: 3 / 4; grid-column: 1 / 2; }
    main            { grid-row: 3 / 4; grid-column: 2 / 3; }
    #schnellzugriff { grid-row: 3 / 4; grid-column: 3 / 4; }
}

/* Four column layout */
/*@media (min-width: 80rem) {
    The rules from the three colum-layout still apply.
    main {
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
    }
    #aktuelles {
        flex: 1;
    }
    #termine {
        flex: 1;
        margin-left: calc(2 * var(--base-unit));
    }
    #termine > h1 {
        margin-top: 0 !important;
    }
}*/




/* INDIVIDUAL ELEMENTS */



/* #schnellzugriff */

#schnellzugriff h1 {
    font-size: var(--h2-font-size);
    margin: 0 0 var(--h2-margin-bottom) 0;
    padding: 0;
}

#schnellzugriff ul {
    list-style-type: none;
    padding: 0;
    margin: 0;
}

#schnellzugriff ul li {
    vertical-align: middle;
}

#schnellzugriff ul li a {
    display: block;
    width: 100%;
    margin: calc(0.5 * var(--base-unit)) 0;
    padding: calc(0.5 * var(--base-unit));
    padding-right: calc(1.2 * var(--base-unit)); /* space for a:hover::after */
    box-sizing: border-box;
    border-radius: calc(0.5 * var(--base-unit));

    background-color: var(--nav-2-color);
    color: var(--body-text-color);
    text-decoration: none;

    position: relative;
}

#schnellzugriff ul li a:hover {
    text-decoration: underline;
}

#schnellzugriff ul a:hover::after {
    content: "↪";
    position: absolute;
    right: calc(0.2 * var(--base-unit));
    top: calc(0.2 * var(--base-unit));
    width: var(--base-unit);
    height: var(--base-unit);
    text-align: center;
    border-radius: calc(0.5 * var(--base-unit));
    background-color: white;
}

#schnellzugriff ul a:hover {
    background-color: var(--nav-highlight);
    color: var(--body-text-color);
}



/* #aktuelles */

#aktuelles > h1 {
    /* #aktuelles is not a .markdown styled element, so we have to specify its h1 height manually. */
    font-size: var(--h1-font-size);
    margin: 0 0 var(--h1-margin-bottom) 0;
}



/* #termine */

#termine > h1 {
    /* #termine is not a .markdown styled element, so we have to specify its h1 height manually. */
    font-size: var(--h1-font-size);
    margin: var(--h1-margin-top) 0 var(--h1-margin-bottom) 0;
}

#termine .verticalScrollContainer {
    /* The .verticalCrollContainer contains the #terminkalender and has a set height, allowing for scrolling of the latter. */
    max-height: calc(8 * 2.4 * var(--base-unit));
    width: 100%;
    overflow-y: scroll;
}

/* table#terminkalender. Since this is a table, there is some nasty CSS in here.  */

#terminkalender {
    margin: 0;
    width: 100%;
    overflow-x: scroll;
    border-collapse: collapse;
    text-align: left;
}

#terminkalender th,
#terminkalender td {
    margin: 0;
    padding: 0;
    height: calc(2.4 * var(--base-unit));
    box-sizing: border-box;
    border: 1px #aaa solid;
    width: calc(100% / 7); /* 7 Days in a week and one week per line. */
    position: relative;
    background-clip: padding-box; /* Because position: relative; draws the background over the border. See https://stackoverflow.com/a/24492118. */
}

#terminkalender th {
    /* Please don't ask me why, but the background of the td's that scroll up always appear on top of the th's border, ignoring the z-index of the th. This exact box-shadow combination makes a pixel-perfect replica (on my machine …). CSS is horrible. */
    position: -webkit-sticky;
    position: sticky;
    top: 1px;
    z-index: 100;
    border-top: none;
    border-bottom: none;
    box-shadow: 0px -1px #aaa, 0px -1px #aaa inset;
    box-sizing: border-box;
    vertical-align: center;
    background-color: #ffffffdd; /* A little transparency for that modern look. */
}

#terminkalender td {
    vertical-align: top;
}

#terminkalender td.oddMonth {
    background-color: var(--article-color);
}

#terminkalender td.evenMonth {
    background-color: #e8e8e8;
}

#terminkalender td p {
    margin: 0;
    padding: 0;
}

#terminkalender td p.dayNumber,
#terminkalender td p.monthName {
    position: absolute;
    bottom: 0;
    z-index: 0;
}

#terminkalender td p.dayNumber {
    color: #888;
    right: calc(0.1 * var(--base-unit));
}

#terminkalender td p.monthName {
    color: #000;
    font-weight: bold;
    left: calc(0.1 * var(--base-unit));
}

#terminkalender td a.terminKlein,
#terminkalender td a.terminKlein:visited {
    color: var(--body-text-color);
}

#terminkalender td a.terminKlein {
    z-index: 50;
    display: block;
    overflow: hidden;
    word-break: break-all;
    margin: calc(0.1 * var(--base-unit));
    padding: calc(0.1 * var(--base-unit));
    background-color: var(--nav-level-2-color);
    border-radius: calc(0.2 * var(--base-unit));
    max-height: calc(2 * var(--base-unit));
    text-decoration: underline;
}

#terminkalender td a.terminKlein.ausgewaehlt {
    background-color: var(--nav-level-2-highlight);
}

#terminkalender td a.terminKlein:hover {
    cursor: pointer;
    background-color: var(--nav-level-2-highlight);
    text-decoration-thickness: 2px;
    
}

/* Termin Details */

#termine .terminGross {
    display: none;
}

#termine .terminGross:target {
    display: block;
    animation: 2s ease-out termin-highlight;
}

/* If a termin is already selected, don't show the #klickAufforderung. */
:target ~ p#klickAufforderung {
    display: none;
}

@keyframes termin-highlight {
    0%   { background-color: #ffff76; }
    100% { background-color: var(--article-color); }
}



/* article.box */

article.box {
    margin: var(--base-unit) 0;
    padding: calc(var(--base-unit) - 1px) calc(var(--base-unit) - 1px); /* -1px to account for the border */
    border: 1px solid var(--article-border-color);
    border-radius: calc(0.5 * var(--base-unit));
    background-color: var(--article-color);
}

/* h elements get knocked down two ranks. */
article.box h1 {
    font-size: var(--h3-font-size);
    margin: var(--h3-margin-top) 0 var(--h3-margin-bottom) 0;
}

article.box h2 {
    font-size: var(--h4-font-size);
    margin: var(--h4-margin-top) 0 var(--h4-margin-bottom) 0;
}



/* #kontakt */

#kontakt h1 {
    font-size: var(--h2-font-size);
    margin: 0 0 var(--h2-margin-bottom) 0;
}

#kontakt h2 {
    /* An h2 gets knocked down to the size of an h3. */
    font-size: var(--h4-font-size);
    margin: var(--h4-margin-top) 0 var(--h4-margin-bottom) 0;
}

#kontakt address,
#kontakt p {
    /* Overwrite some of the .markdown rules. */
    text-align: left;
    margin: calc(0.5 * var(--base-unit)) 0;
}

#kontakt address {
    /* This has a profound impact on the layout, since the width of the #kontakt column is set to min-content in the grid layout above: The lines in an address block within #kontakt are not allowed to wrap, so the longest one (probably) determinines the min-content size and thus the width of the whole column. This is quite possibly a horrible css architecture. :D */
    white-space: nowrap;
}